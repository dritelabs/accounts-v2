// source: v1/token.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var v1_grant_type_pb = require('../v1/grant_type_pb.js');
goog.object.extend(proto, v1_grant_type_pb);
goog.exportSymbol('proto.v1.TokenRequest', null, global);
goog.exportSymbol('proto.v1.TokenRequest.AuthorizationCodeGrant', null, global);
goog.exportSymbol('proto.v1.TokenRequest.ClientCredentialsGrant', null, global);
goog.exportSymbol('proto.v1.TokenRequest.GrantTypeRequestCase', null, global);
goog.exportSymbol('proto.v1.TokenRequest.RefreshTokenGrant', null, global);
goog.exportSymbol('proto.v1.TokenResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.TokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.v1.TokenRequest.oneofGroups_);
};
goog.inherits(proto.v1.TokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.TokenRequest.displayName = 'proto.v1.TokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.TokenRequest.AuthorizationCodeGrant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.TokenRequest.AuthorizationCodeGrant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.TokenRequest.AuthorizationCodeGrant.displayName = 'proto.v1.TokenRequest.AuthorizationCodeGrant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.TokenRequest.ClientCredentialsGrant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.TokenRequest.ClientCredentialsGrant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.TokenRequest.ClientCredentialsGrant.displayName = 'proto.v1.TokenRequest.ClientCredentialsGrant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.TokenRequest.RefreshTokenGrant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.TokenRequest.RefreshTokenGrant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.TokenRequest.RefreshTokenGrant.displayName = 'proto.v1.TokenRequest.RefreshTokenGrant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.TokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.TokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.TokenResponse.displayName = 'proto.v1.TokenResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.v1.TokenRequest.oneofGroups_ = [[4,5,6]];

/**
 * @enum {number}
 */
proto.v1.TokenRequest.GrantTypeRequestCase = {
  GRANT_TYPE_REQUEST_NOT_SET: 0,
  AUTHORIZATION_CODE_GRANT: 4,
  CLIENT_CREDENTIALS_GRANT: 5,
  REFRESH_TOKEN_GRANT: 6
};

/**
 * @return {proto.v1.TokenRequest.GrantTypeRequestCase}
 */
proto.v1.TokenRequest.prototype.getGrantTypeRequestCase = function() {
  return /** @type {proto.v1.TokenRequest.GrantTypeRequestCase} */(jspb.Message.computeOneofCase(this, proto.v1.TokenRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.TokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.TokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.TokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.TokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 2, ""),
    grantType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    authorizationCodeGrant: (f = msg.getAuthorizationCodeGrant()) && proto.v1.TokenRequest.AuthorizationCodeGrant.toObject(includeInstance, f),
    clientCredentialsGrant: (f = msg.getClientCredentialsGrant()) && proto.v1.TokenRequest.ClientCredentialsGrant.toObject(includeInstance, f),
    refreshTokenGrant: (f = msg.getRefreshTokenGrant()) && proto.v1.TokenRequest.RefreshTokenGrant.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.TokenRequest}
 */
proto.v1.TokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.TokenRequest;
  return proto.v1.TokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.TokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.TokenRequest}
 */
proto.v1.TokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 3:
      var value = /** @type {!proto.v1.GrantType} */ (reader.readEnum());
      msg.setGrantType(value);
      break;
    case 4:
      var value = new proto.v1.TokenRequest.AuthorizationCodeGrant;
      reader.readMessage(value,proto.v1.TokenRequest.AuthorizationCodeGrant.deserializeBinaryFromReader);
      msg.setAuthorizationCodeGrant(value);
      break;
    case 5:
      var value = new proto.v1.TokenRequest.ClientCredentialsGrant;
      reader.readMessage(value,proto.v1.TokenRequest.ClientCredentialsGrant.deserializeBinaryFromReader);
      msg.setClientCredentialsGrant(value);
      break;
    case 6:
      var value = new proto.v1.TokenRequest.RefreshTokenGrant;
      reader.readMessage(value,proto.v1.TokenRequest.RefreshTokenGrant.deserializeBinaryFromReader);
      msg.setRefreshTokenGrant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.TokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.TokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.TokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.TokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGrantType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAuthorizationCodeGrant();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.v1.TokenRequest.AuthorizationCodeGrant.serializeBinaryToWriter
    );
  }
  f = message.getClientCredentialsGrant();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.v1.TokenRequest.ClientCredentialsGrant.serializeBinaryToWriter
    );
  }
  f = message.getRefreshTokenGrant();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.v1.TokenRequest.RefreshTokenGrant.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.TokenRequest.AuthorizationCodeGrant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.TokenRequest.AuthorizationCodeGrant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    redirectUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    codeVerifier: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.TokenRequest.AuthorizationCodeGrant}
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.TokenRequest.AuthorizationCodeGrant;
  return proto.v1.TokenRequest.AuthorizationCodeGrant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.TokenRequest.AuthorizationCodeGrant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.TokenRequest.AuthorizationCodeGrant}
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectUri(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeVerifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.TokenRequest.AuthorizationCodeGrant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.TokenRequest.AuthorizationCodeGrant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRedirectUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCodeVerifier();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenRequest.AuthorizationCodeGrant} returns this
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string redirect_uri = 2;
 * @return {string}
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.prototype.getRedirectUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenRequest.AuthorizationCodeGrant} returns this
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.prototype.setRedirectUri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code_verifier = 3;
 * @return {string}
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.prototype.getCodeVerifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenRequest.AuthorizationCodeGrant} returns this
 */
proto.v1.TokenRequest.AuthorizationCodeGrant.prototype.setCodeVerifier = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.TokenRequest.ClientCredentialsGrant.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.TokenRequest.ClientCredentialsGrant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.TokenRequest.ClientCredentialsGrant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.TokenRequest.ClientCredentialsGrant.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.TokenRequest.ClientCredentialsGrant}
 */
proto.v1.TokenRequest.ClientCredentialsGrant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.TokenRequest.ClientCredentialsGrant;
  return proto.v1.TokenRequest.ClientCredentialsGrant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.TokenRequest.ClientCredentialsGrant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.TokenRequest.ClientCredentialsGrant}
 */
proto.v1.TokenRequest.ClientCredentialsGrant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.TokenRequest.ClientCredentialsGrant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.TokenRequest.ClientCredentialsGrant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.TokenRequest.ClientCredentialsGrant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.TokenRequest.ClientCredentialsGrant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.TokenRequest.RefreshTokenGrant.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.TokenRequest.RefreshTokenGrant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.TokenRequest.RefreshTokenGrant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.TokenRequest.RefreshTokenGrant.toObject = function(includeInstance, msg) {
  var f, obj = {
    refreshToken: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.TokenRequest.RefreshTokenGrant}
 */
proto.v1.TokenRequest.RefreshTokenGrant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.TokenRequest.RefreshTokenGrant;
  return proto.v1.TokenRequest.RefreshTokenGrant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.TokenRequest.RefreshTokenGrant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.TokenRequest.RefreshTokenGrant}
 */
proto.v1.TokenRequest.RefreshTokenGrant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefreshToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.TokenRequest.RefreshTokenGrant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.TokenRequest.RefreshTokenGrant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.TokenRequest.RefreshTokenGrant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.TokenRequest.RefreshTokenGrant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefreshToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string refresh_token = 1;
 * @return {string}
 */
proto.v1.TokenRequest.RefreshTokenGrant.prototype.getRefreshToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenRequest.RefreshTokenGrant} returns this
 */
proto.v1.TokenRequest.RefreshTokenGrant.prototype.setRefreshToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.v1.TokenRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenRequest} returns this
 */
proto.v1.TokenRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scope = 2;
 * @return {string}
 */
proto.v1.TokenRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenRequest} returns this
 */
proto.v1.TokenRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional GrantType grant_type = 3;
 * @return {!proto.v1.GrantType}
 */
proto.v1.TokenRequest.prototype.getGrantType = function() {
  return /** @type {!proto.v1.GrantType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.v1.GrantType} value
 * @return {!proto.v1.TokenRequest} returns this
 */
proto.v1.TokenRequest.prototype.setGrantType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional AuthorizationCodeGrant authorization_code_grant = 4;
 * @return {?proto.v1.TokenRequest.AuthorizationCodeGrant}
 */
proto.v1.TokenRequest.prototype.getAuthorizationCodeGrant = function() {
  return /** @type{?proto.v1.TokenRequest.AuthorizationCodeGrant} */ (
    jspb.Message.getWrapperField(this, proto.v1.TokenRequest.AuthorizationCodeGrant, 4));
};


/**
 * @param {?proto.v1.TokenRequest.AuthorizationCodeGrant|undefined} value
 * @return {!proto.v1.TokenRequest} returns this
*/
proto.v1.TokenRequest.prototype.setAuthorizationCodeGrant = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.v1.TokenRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.TokenRequest} returns this
 */
proto.v1.TokenRequest.prototype.clearAuthorizationCodeGrant = function() {
  return this.setAuthorizationCodeGrant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.TokenRequest.prototype.hasAuthorizationCodeGrant = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ClientCredentialsGrant client_credentials_grant = 5;
 * @return {?proto.v1.TokenRequest.ClientCredentialsGrant}
 */
proto.v1.TokenRequest.prototype.getClientCredentialsGrant = function() {
  return /** @type{?proto.v1.TokenRequest.ClientCredentialsGrant} */ (
    jspb.Message.getWrapperField(this, proto.v1.TokenRequest.ClientCredentialsGrant, 5));
};


/**
 * @param {?proto.v1.TokenRequest.ClientCredentialsGrant|undefined} value
 * @return {!proto.v1.TokenRequest} returns this
*/
proto.v1.TokenRequest.prototype.setClientCredentialsGrant = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.v1.TokenRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.TokenRequest} returns this
 */
proto.v1.TokenRequest.prototype.clearClientCredentialsGrant = function() {
  return this.setClientCredentialsGrant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.TokenRequest.prototype.hasClientCredentialsGrant = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RefreshTokenGrant refresh_token_grant = 6;
 * @return {?proto.v1.TokenRequest.RefreshTokenGrant}
 */
proto.v1.TokenRequest.prototype.getRefreshTokenGrant = function() {
  return /** @type{?proto.v1.TokenRequest.RefreshTokenGrant} */ (
    jspb.Message.getWrapperField(this, proto.v1.TokenRequest.RefreshTokenGrant, 6));
};


/**
 * @param {?proto.v1.TokenRequest.RefreshTokenGrant|undefined} value
 * @return {!proto.v1.TokenRequest} returns this
*/
proto.v1.TokenRequest.prototype.setRefreshTokenGrant = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.v1.TokenRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.TokenRequest} returns this
 */
proto.v1.TokenRequest.prototype.clearRefreshTokenGrant = function() {
  return this.setRefreshTokenGrant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.TokenRequest.prototype.hasRefreshTokenGrant = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.TokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.TokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.TokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.TokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tokenType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    expiresIn: jspb.Message.getFieldWithDefault(msg, 3, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 4, ""),
    refreshToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.TokenResponse}
 */
proto.v1.TokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.TokenResponse;
  return proto.v1.TokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.TokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.TokenResponse}
 */
proto.v1.TokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiresIn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefreshToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.TokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.TokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.TokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.TokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTokenType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpiresIn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRefreshToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string access_token = 1;
 * @return {string}
 */
proto.v1.TokenResponse.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenResponse} returns this
 */
proto.v1.TokenResponse.prototype.setAccessToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string token_type = 2;
 * @return {string}
 */
proto.v1.TokenResponse.prototype.getTokenType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenResponse} returns this
 */
proto.v1.TokenResponse.prototype.setTokenType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string expires_in = 3;
 * @return {string}
 */
proto.v1.TokenResponse.prototype.getExpiresIn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenResponse} returns this
 */
proto.v1.TokenResponse.prototype.setExpiresIn = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string scope = 4;
 * @return {string}
 */
proto.v1.TokenResponse.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenResponse} returns this
 */
proto.v1.TokenResponse.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string refresh_token = 5;
 * @return {string}
 */
proto.v1.TokenResponse.prototype.getRefreshToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.TokenResponse} returns this
 */
proto.v1.TokenResponse.prototype.setRefreshToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.v1);
