// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file authorization.proto (package pb, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { CodeChallengeMethod } from "./code_challenge_method_pb.js";
import { Client } from "./client_pb.js";
import { Scope } from "./scope_pb.js";

/**
 * @generated from message pb.AuthorizationRequest
 */
export class AuthorizationRequest extends Message<AuthorizationRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: string code_challenge = 2;
   */
  codeChallenge = "";

  /**
   * @generated from field: optional pb.CodeChallengeMethod code_challenge_method = 3;
   */
  codeChallengeMethod?: CodeChallengeMethod;

  /**
   * @generated from field: string redirect_uri = 4;
   */
  redirectUri = "";

  /**
   * @generated from field: optional string scope = 5;
   */
  scope?: string;

  /**
   * @generated from field: optional string state = 6;
   */
  state?: string;

  constructor(data?: PartialMessage<AuthorizationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "pb.AuthorizationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code_challenge", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "code_challenge_method", kind: "enum", T: proto3.getEnumType(CodeChallengeMethod), opt: true },
    { no: 4, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthorizationRequest {
    return new AuthorizationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthorizationRequest {
    return new AuthorizationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthorizationRequest {
    return new AuthorizationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AuthorizationRequest | PlainMessage<AuthorizationRequest> | undefined, b: AuthorizationRequest | PlainMessage<AuthorizationRequest> | undefined): boolean {
    return proto3.util.equals(AuthorizationRequest, a, b);
  }
}

/**
 * @generated from message pb.AuthorizationResponse
 */
export class AuthorizationResponse extends Message<AuthorizationResponse> {
  /**
   * @generated from field: pb.Client client = 1;
   */
  client?: Client;

  /**
   * @generated from field: repeated pb.Scope scopes = 2;
   */
  scopes: Scope[] = [];

  constructor(data?: PartialMessage<AuthorizationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "pb.AuthorizationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client", kind: "message", T: Client },
    { no: 2, name: "scopes", kind: "message", T: Scope, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthorizationResponse {
    return new AuthorizationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthorizationResponse {
    return new AuthorizationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthorizationResponse {
    return new AuthorizationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AuthorizationResponse | PlainMessage<AuthorizationResponse> | undefined, b: AuthorizationResponse | PlainMessage<AuthorizationResponse> | undefined): boolean {
    return proto3.util.equals(AuthorizationResponse, a, b);
  }
}

/**
 * @generated from message pb.CreateAuthorizationRequest
 */
export class CreateAuthorizationRequest extends Message<CreateAuthorizationRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: string code_challenge = 2;
   */
  codeChallenge = "";

  /**
   * @generated from field: optional pb.CodeChallengeMethod code_challenge_method = 3;
   */
  codeChallengeMethod?: CodeChallengeMethod;

  /**
   * @generated from field: string redirect_uri = 4;
   */
  redirectUri = "";

  /**
   * @generated from field: optional string scope = 5;
   */
  scope?: string;

  /**
   * @generated from field: optional string state = 6;
   */
  state?: string;

  constructor(data?: PartialMessage<CreateAuthorizationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "pb.CreateAuthorizationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code_challenge", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "code_challenge_method", kind: "enum", T: proto3.getEnumType(CodeChallengeMethod), opt: true },
    { no: 4, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAuthorizationRequest {
    return new CreateAuthorizationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAuthorizationRequest {
    return new CreateAuthorizationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAuthorizationRequest {
    return new CreateAuthorizationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAuthorizationRequest | PlainMessage<CreateAuthorizationRequest> | undefined, b: CreateAuthorizationRequest | PlainMessage<CreateAuthorizationRequest> | undefined): boolean {
    return proto3.util.equals(CreateAuthorizationRequest, a, b);
  }
}

/**
 * @generated from message pb.CreateAuthorizationResponse
 */
export class CreateAuthorizationResponse extends Message<CreateAuthorizationResponse> {
  /**
   * @generated from field: string redirect_uri = 1;
   */
  redirectUri = "";

  constructor(data?: PartialMessage<CreateAuthorizationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "pb.CreateAuthorizationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAuthorizationResponse {
    return new CreateAuthorizationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAuthorizationResponse {
    return new CreateAuthorizationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAuthorizationResponse {
    return new CreateAuthorizationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAuthorizationResponse | PlainMessage<CreateAuthorizationResponse> | undefined, b: CreateAuthorizationResponse | PlainMessage<CreateAuthorizationResponse> | undefined): boolean {
    return proto3.util.equals(CreateAuthorizationResponse, a, b);
  }
}

