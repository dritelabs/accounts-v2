// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file drite/account/v1/client.proto (package drite.account.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { ClientApproval } from "./client_approval_pb.js";
import { GrantType } from "./grant_type_pb.js";
import { PublicKeysConfiguration } from "./public_keys_configuration_pb.js";
import { RefreshTokenRotationType } from "./refresh_token_rotation_type_pb.js";
import { ResponseType } from "./response_type_pb.js";
import { ApplicationType } from "./application_type_pb.js";
import { TokenEndpointAuthMethod } from "./token_endpoint_auth_method_pb.js";

/**
 * @generated from message drite.account.v1.Client
 */
export class Client extends Message<Client> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  /**
   * @generated from field: repeated string contacts = 3;
   */
  contacts: string[] = [];

  /**
   * @generated from field: repeated drite.account.v1.ClientApproval client_approvals = 4;
   */
  clientApprovals: ClientApproval[] = [];

  /**
   * @generated from field: string description = 5;
   */
  description = "";

  /**
   * @generated from field: repeated drite.account.v1.GrantType grant_types = 6;
   */
  grantTypes: GrantType[] = [];

  /**
   * @generated from field: bool is_first_party = 7;
   */
  isFirstParty = false;

  /**
   * @generated from field: repeated google.protobuf.Any jwks = 8;
   */
  jwks: Any[] = [];

  /**
   * @generated from field: string jwks_uri = 9;
   */
  jwksUri = "";

  /**
   * @generated from field: string logo_uri = 10;
   */
  logoUri = "";

  /**
   * @generated from field: string name = 11;
   */
  name = "";

  /**
   * @generated from field: string policy_uri = 12;
   */
  policyUri = "";

  /**
   * @generated from field: drite.account.v1.PublicKeysConfiguration public_keys_configuration = 13;
   */
  publicKeysConfiguration = PublicKeysConfiguration.UNSPECIFIED;

  /**
   * @generated from field: repeated string redirect_uris = 14;
   */
  redirectUris: string[] = [];

  /**
   * @generated from field: drite.account.v1.RefreshTokenRotationType refresh_token_rotation_type = 15;
   */
  refreshTokenRotationType = RefreshTokenRotationType.UNSPECIFIED;

  /**
   * @generated from field: repeated drite.account.v1.ResponseType response_types = 16;
   */
  responseTypes: ResponseType[] = [];

  /**
   * @generated from field: string secret = 17;
   */
  secret = "";

  /**
   * @generated from field: repeated string scope = 18;
   */
  scope: string[] = [];

  /**
   * @generated from field: string software_id = 19;
   */
  softwareId = "";

  /**
   * @generated from field: string software_version = 20;
   */
  softwareVersion = "";

  /**
   * @generated from field: drite.account.v1.ApplicationType type = 21;
   */
  type = ApplicationType.UNSPECIFIED;

  /**
   * @generated from field: string tos_uri = 22;
   */
  tosUri = "";

  /**
   * @generated from field: drite.account.v1.TokenEndpointAuthMethod token_endpoint_auth_method = 23;
   */
  tokenEndpointAuthMethod = TokenEndpointAuthMethod.UNSPECIFIED;

  /**
   * @generated from field: string uri = 24;
   */
  uri = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 25;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 26;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Client>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.Client";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "contacts", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "client_approvals", kind: "message", T: ClientApproval, repeated: true },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "grant_types", kind: "enum", T: proto3.getEnumType(GrantType), repeated: true },
    { no: 7, name: "is_first_party", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "jwks", kind: "message", T: Any, repeated: true },
    { no: 9, name: "jwks_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "logo_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "policy_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "public_keys_configuration", kind: "enum", T: proto3.getEnumType(PublicKeysConfiguration) },
    { no: 14, name: "redirect_uris", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 15, name: "refresh_token_rotation_type", kind: "enum", T: proto3.getEnumType(RefreshTokenRotationType) },
    { no: 16, name: "response_types", kind: "enum", T: proto3.getEnumType(ResponseType), repeated: true },
    { no: 17, name: "secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 19, name: "software_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "software_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "type", kind: "enum", T: proto3.getEnumType(ApplicationType) },
    { no: 22, name: "tos_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "token_endpoint_auth_method", kind: "enum", T: proto3.getEnumType(TokenEndpointAuthMethod) },
    { no: 24, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "created_at", kind: "message", T: Timestamp },
    { no: 26, name: "updated_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Client {
    return new Client().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Client {
    return new Client().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Client {
    return new Client().fromJsonString(jsonString, options);
  }

  static equals(a: Client | PlainMessage<Client> | undefined, b: Client | PlainMessage<Client> | undefined): boolean {
    return proto3.util.equals(Client, a, b);
  }
}

/**
 * @generated from message drite.account.v1.ClientsResponse
 */
export class ClientsResponse extends Message<ClientsResponse> {
  /**
   * @generated from field: repeated drite.account.v1.Client clients = 1;
   */
  clients: Client[] = [];

  constructor(data?: PartialMessage<ClientsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.ClientsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "clients", kind: "message", T: Client, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClientsResponse {
    return new ClientsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClientsResponse {
    return new ClientsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClientsResponse {
    return new ClientsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ClientsResponse | PlainMessage<ClientsResponse> | undefined, b: ClientsResponse | PlainMessage<ClientsResponse> | undefined): boolean {
    return proto3.util.equals(ClientsResponse, a, b);
  }
}

/**
 * @generated from message drite.account.v1.CreateClientRequest
 */
export class CreateClientRequest extends Message<CreateClientRequest> {
  /**
   * @generated from field: string description = 5;
   */
  description = "";

  /**
   * @generated from field: string name = 11;
   */
  name = "";

  /**
   * @generated from field: repeated string redirect_uris = 14;
   */
  redirectUris: string[] = [];

  /**
   * @generated from field: drite.account.v1.ApplicationType type = 21;
   */
  type = ApplicationType.UNSPECIFIED;

  constructor(data?: PartialMessage<CreateClientRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.CreateClientRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "redirect_uris", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 21, name: "type", kind: "enum", T: proto3.getEnumType(ApplicationType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateClientRequest {
    return new CreateClientRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateClientRequest {
    return new CreateClientRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateClientRequest {
    return new CreateClientRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateClientRequest | PlainMessage<CreateClientRequest> | undefined, b: CreateClientRequest | PlainMessage<CreateClientRequest> | undefined): boolean {
    return proto3.util.equals(CreateClientRequest, a, b);
  }
}

/**
 * @generated from message drite.account.v1.CreateClientResponse
 */
export class CreateClientResponse extends Message<CreateClientResponse> {
  /**
   * @generated from field: drite.account.v1.Client client = 1;
   */
  client?: Client;

  constructor(data?: PartialMessage<CreateClientResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.CreateClientResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client", kind: "message", T: Client },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateClientResponse {
    return new CreateClientResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateClientResponse {
    return new CreateClientResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateClientResponse {
    return new CreateClientResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateClientResponse | PlainMessage<CreateClientResponse> | undefined, b: CreateClientResponse | PlainMessage<CreateClientResponse> | undefined): boolean {
    return proto3.util.equals(CreateClientResponse, a, b);
  }
}

/**
 * @generated from message drite.account.v1.DeleteClientRequest
 */
export class DeleteClientRequest extends Message<DeleteClientRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteClientRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.DeleteClientRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteClientRequest {
    return new DeleteClientRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteClientRequest {
    return new DeleteClientRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteClientRequest {
    return new DeleteClientRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteClientRequest | PlainMessage<DeleteClientRequest> | undefined, b: DeleteClientRequest | PlainMessage<DeleteClientRequest> | undefined): boolean {
    return proto3.util.equals(DeleteClientRequest, a, b);
  }
}

/**
 * @generated from message drite.account.v1.GetClientRequest
 */
export class GetClientRequest extends Message<GetClientRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetClientRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.GetClientRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetClientRequest {
    return new GetClientRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetClientRequest {
    return new GetClientRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetClientRequest {
    return new GetClientRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetClientRequest | PlainMessage<GetClientRequest> | undefined, b: GetClientRequest | PlainMessage<GetClientRequest> | undefined): boolean {
    return proto3.util.equals(GetClientRequest, a, b);
  }
}

/**
 * @generated from message drite.account.v1.GetClientResponse
 */
export class GetClientResponse extends Message<GetClientResponse> {
  /**
   * @generated from field: drite.account.v1.Client client = 1;
   */
  client?: Client;

  constructor(data?: PartialMessage<GetClientResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.GetClientResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client", kind: "message", T: Client },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetClientResponse {
    return new GetClientResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetClientResponse {
    return new GetClientResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetClientResponse {
    return new GetClientResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetClientResponse | PlainMessage<GetClientResponse> | undefined, b: GetClientResponse | PlainMessage<GetClientResponse> | undefined): boolean {
    return proto3.util.equals(GetClientResponse, a, b);
  }
}

/**
 * @generated from message drite.account.v1.ListClientsRequest
 */
export class ListClientsRequest extends Message<ListClientsRequest> {
  constructor(data?: PartialMessage<ListClientsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.ListClientsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListClientsRequest {
    return new ListClientsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListClientsRequest {
    return new ListClientsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListClientsRequest {
    return new ListClientsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListClientsRequest | PlainMessage<ListClientsRequest> | undefined, b: ListClientsRequest | PlainMessage<ListClientsRequest> | undefined): boolean {
    return proto3.util.equals(ListClientsRequest, a, b);
  }
}

/**
 * @generated from message drite.account.v1.ListClientsResponse
 */
export class ListClientsResponse extends Message<ListClientsResponse> {
  /**
   * @generated from field: repeated drite.account.v1.Client clients = 1;
   */
  clients: Client[] = [];

  constructor(data?: PartialMessage<ListClientsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.ListClientsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "clients", kind: "message", T: Client, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListClientsResponse {
    return new ListClientsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListClientsResponse {
    return new ListClientsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListClientsResponse {
    return new ListClientsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListClientsResponse | PlainMessage<ListClientsResponse> | undefined, b: ListClientsResponse | PlainMessage<ListClientsResponse> | undefined): boolean {
    return proto3.util.equals(ListClientsResponse, a, b);
  }
}

/**
 * @generated from message drite.account.v1.UpdateClientRequest
 */
export class UpdateClientRequest extends Message<UpdateClientRequest> {
  /**
   * @generated from field: repeated string contacts = 3;
   */
  contacts: string[] = [];

  /**
   * @generated from field: optional string description = 5;
   */
  description?: string;

  /**
   * @generated from field: repeated drite.account.v1.GrantType grant_types = 6;
   */
  grantTypes: GrantType[] = [];

  /**
   * @generated from field: optional bool is_first_party = 7;
   */
  isFirstParty?: boolean;

  /**
   * @generated from field: repeated google.protobuf.Any jwks = 8;
   */
  jwks: Any[] = [];

  /**
   * @generated from field: optional string jwks_uri = 9;
   */
  jwksUri?: string;

  /**
   * @generated from field: optional string logo_uri = 10;
   */
  logoUri?: string;

  /**
   * @generated from field: optional string name = 11;
   */
  name?: string;

  /**
   * @generated from field: optional string policy_uri = 12;
   */
  policyUri?: string;

  /**
   * @generated from field: optional drite.account.v1.PublicKeysConfiguration public_keys_configuration = 13;
   */
  publicKeysConfiguration?: PublicKeysConfiguration;

  /**
   * @generated from field: repeated string redirect_uris = 14;
   */
  redirectUris: string[] = [];

  /**
   * @generated from field: drite.account.v1.RefreshTokenRotationType refresh_token_rotation_type = 15;
   */
  refreshTokenRotationType = RefreshTokenRotationType.UNSPECIFIED;

  /**
   * @generated from field: repeated drite.account.v1.ResponseType response_types = 16;
   */
  responseTypes: ResponseType[] = [];

  /**
   * @generated from field: optional string secret = 17;
   */
  secret?: string;

  /**
   * @generated from field: repeated string scope = 18;
   */
  scope: string[] = [];

  /**
   * @generated from field: optional string software_id = 19;
   */
  softwareId?: string;

  /**
   * @generated from field: optional string software_version = 20;
   */
  softwareVersion?: string;

  /**
   * @generated from field: drite.account.v1.ApplicationType type = 21;
   */
  type = ApplicationType.UNSPECIFIED;

  /**
   * @generated from field: optional string tos_uri = 22;
   */
  tosUri?: string;

  /**
   * @generated from field: drite.account.v1.TokenEndpointAuthMethod token_endpoint_auth_method = 23;
   */
  tokenEndpointAuthMethod = TokenEndpointAuthMethod.UNSPECIFIED;

  /**
   * @generated from field: optional string uri = 24;
   */
  uri?: string;

  constructor(data?: PartialMessage<UpdateClientRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.UpdateClientRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "contacts", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "grant_types", kind: "enum", T: proto3.getEnumType(GrantType), repeated: true },
    { no: 7, name: "is_first_party", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 8, name: "jwks", kind: "message", T: Any, repeated: true },
    { no: 9, name: "jwks_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "logo_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "policy_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "public_keys_configuration", kind: "enum", T: proto3.getEnumType(PublicKeysConfiguration), opt: true },
    { no: 14, name: "redirect_uris", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 15, name: "refresh_token_rotation_type", kind: "enum", T: proto3.getEnumType(RefreshTokenRotationType) },
    { no: 16, name: "response_types", kind: "enum", T: proto3.getEnumType(ResponseType), repeated: true },
    { no: 17, name: "secret", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 18, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 19, name: "software_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 20, name: "software_version", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 21, name: "type", kind: "enum", T: proto3.getEnumType(ApplicationType) },
    { no: 22, name: "tos_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 23, name: "token_endpoint_auth_method", kind: "enum", T: proto3.getEnumType(TokenEndpointAuthMethod) },
    { no: 24, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClientRequest {
    return new UpdateClientRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClientRequest {
    return new UpdateClientRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClientRequest {
    return new UpdateClientRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateClientRequest | PlainMessage<UpdateClientRequest> | undefined, b: UpdateClientRequest | PlainMessage<UpdateClientRequest> | undefined): boolean {
    return proto3.util.equals(UpdateClientRequest, a, b);
  }
}

