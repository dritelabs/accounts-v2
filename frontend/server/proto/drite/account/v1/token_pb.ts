// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file drite/account/v1/token.proto (package drite.account.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { GrantType } from "./grant_type_pb.js";

/**
 * @generated from message drite.account.v1.TokenRequest
 */
export class TokenRequest extends Message<TokenRequest> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * @generated from field: string scope = 2;
   */
  scope = "";

  /**
   * @generated from field: drite.account.v1.GrantType grant_type = 3;
   */
  grantType = GrantType.UNSPECIFIED;

  /**
   * @generated from oneof drite.account.v1.TokenRequest.grant_type_request
   */
  grantTypeRequest: {
    /**
     * @generated from field: drite.account.v1.TokenRequest.AuthorizationCodeGrant authorization_code_grant = 4;
     */
    value: TokenRequest_AuthorizationCodeGrant;
    case: "authorizationCodeGrant";
  } | {
    /**
     * @generated from field: drite.account.v1.TokenRequest.ClientCredentialsGrant client_credentials_grant = 5;
     */
    value: TokenRequest_ClientCredentialsGrant;
    case: "clientCredentialsGrant";
  } | {
    /**
     * @generated from field: drite.account.v1.TokenRequest.RefreshTokenGrant refresh_token_grant = 6;
     */
    value: TokenRequest_RefreshTokenGrant;
    case: "refreshTokenGrant";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.TokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "grant_type", kind: "enum", T: proto3.getEnumType(GrantType) },
    { no: 4, name: "authorization_code_grant", kind: "message", T: TokenRequest_AuthorizationCodeGrant, oneof: "grant_type_request" },
    { no: 5, name: "client_credentials_grant", kind: "message", T: TokenRequest_ClientCredentialsGrant, oneof: "grant_type_request" },
    { no: 6, name: "refresh_token_grant", kind: "message", T: TokenRequest_RefreshTokenGrant, oneof: "grant_type_request" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenRequest {
    return new TokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenRequest {
    return new TokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenRequest {
    return new TokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TokenRequest | PlainMessage<TokenRequest> | undefined, b: TokenRequest | PlainMessage<TokenRequest> | undefined): boolean {
    return proto3.util.equals(TokenRequest, a, b);
  }
}

/**
 * @generated from message drite.account.v1.TokenRequest.AuthorizationCodeGrant
 */
export class TokenRequest_AuthorizationCodeGrant extends Message<TokenRequest_AuthorizationCodeGrant> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  /**
   * @generated from field: string redirect_uri = 2;
   */
  redirectUri = "";

  /**
   * @generated from field: string code_verifier = 3;
   */
  codeVerifier = "";

  constructor(data?: PartialMessage<TokenRequest_AuthorizationCodeGrant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.TokenRequest.AuthorizationCodeGrant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "code_verifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenRequest_AuthorizationCodeGrant {
    return new TokenRequest_AuthorizationCodeGrant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenRequest_AuthorizationCodeGrant {
    return new TokenRequest_AuthorizationCodeGrant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenRequest_AuthorizationCodeGrant {
    return new TokenRequest_AuthorizationCodeGrant().fromJsonString(jsonString, options);
  }

  static equals(a: TokenRequest_AuthorizationCodeGrant | PlainMessage<TokenRequest_AuthorizationCodeGrant> | undefined, b: TokenRequest_AuthorizationCodeGrant | PlainMessage<TokenRequest_AuthorizationCodeGrant> | undefined): boolean {
    return proto3.util.equals(TokenRequest_AuthorizationCodeGrant, a, b);
  }
}

/**
 * @generated from message drite.account.v1.TokenRequest.ClientCredentialsGrant
 */
export class TokenRequest_ClientCredentialsGrant extends Message<TokenRequest_ClientCredentialsGrant> {
  constructor(data?: PartialMessage<TokenRequest_ClientCredentialsGrant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.TokenRequest.ClientCredentialsGrant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenRequest_ClientCredentialsGrant {
    return new TokenRequest_ClientCredentialsGrant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenRequest_ClientCredentialsGrant {
    return new TokenRequest_ClientCredentialsGrant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenRequest_ClientCredentialsGrant {
    return new TokenRequest_ClientCredentialsGrant().fromJsonString(jsonString, options);
  }

  static equals(a: TokenRequest_ClientCredentialsGrant | PlainMessage<TokenRequest_ClientCredentialsGrant> | undefined, b: TokenRequest_ClientCredentialsGrant | PlainMessage<TokenRequest_ClientCredentialsGrant> | undefined): boolean {
    return proto3.util.equals(TokenRequest_ClientCredentialsGrant, a, b);
  }
}

/**
 * @generated from message drite.account.v1.TokenRequest.RefreshTokenGrant
 */
export class TokenRequest_RefreshTokenGrant extends Message<TokenRequest_RefreshTokenGrant> {
  /**
   * @generated from field: string refresh_token = 1;
   */
  refreshToken = "";

  constructor(data?: PartialMessage<TokenRequest_RefreshTokenGrant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.TokenRequest.RefreshTokenGrant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenRequest_RefreshTokenGrant {
    return new TokenRequest_RefreshTokenGrant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenRequest_RefreshTokenGrant {
    return new TokenRequest_RefreshTokenGrant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenRequest_RefreshTokenGrant {
    return new TokenRequest_RefreshTokenGrant().fromJsonString(jsonString, options);
  }

  static equals(a: TokenRequest_RefreshTokenGrant | PlainMessage<TokenRequest_RefreshTokenGrant> | undefined, b: TokenRequest_RefreshTokenGrant | PlainMessage<TokenRequest_RefreshTokenGrant> | undefined): boolean {
    return proto3.util.equals(TokenRequest_RefreshTokenGrant, a, b);
  }
}

/**
 * @generated from message drite.account.v1.TokenResponse
 */
export class TokenResponse extends Message<TokenResponse> {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken = "";

  /**
   * @generated from field: string token_type = 2;
   */
  tokenType = "";

  /**
   * @generated from field: string expires_in = 3;
   */
  expiresIn = "";

  /**
   * @generated from field: string scope = 4;
   */
  scope = "";

  /**
   * @generated from field: string refresh_token = 5;
   */
  refreshToken = "";

  constructor(data?: PartialMessage<TokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "drite.account.v1.TokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expires_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenResponse {
    return new TokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenResponse {
    return new TokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenResponse {
    return new TokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TokenResponse | PlainMessage<TokenResponse> | undefined, b: TokenResponse | PlainMessage<TokenResponse> | undefined): boolean {
    return proto3.util.equals(TokenResponse, a, b);
  }
}

